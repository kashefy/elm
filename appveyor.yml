version: 0.0.{build}
cache:
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
  - C:\ProgramData\chocolatey\lib -> appveyor.yml
install:
  - set PATH=C:\MinGW\bin;%PATH%
  - ps: ls C:\
  - cmd: choco install opencv -y
  - ps: cd ..
  - appveyor DownloadFile https://googletest.googlecode.com/files/gtest-1.7.0.zip
  - 7z x .\gtest-1.7.0.zip -y > NUL
  - ps: cd gtest-1.7.0
  - ps: mv "C:\Program Files (x86)\Git\bin\sh.exe" "C:\Program Files (x86)\Git\bin\shxx.exe"
  - cmd: cmake -G "MinGW Makefiles" .
  - ps: mv "C:\Program Files (x86)\Git\bin\shxx.exe" "C:\Program Files (x86)\Git\bin\sh.exe"
  - cmd: mingw32-make
  # return to repo dir
  - ps: cd ..\elm
before_build:
  - cmd: SET APP_PATH=%CD%
  - cmd: IF EXIST C:\OpenCV* CD C:\OpenCV*
  - cmd: SET OPENCV_ROOT_PATH=%CD%\opencv
  - cmd: CD %APP_PATH%
  - ps: mkdir ..\build
  - ps: cd build
  - cmd: cmake -G "MinGW Makefiles" -DOpenCV_DIR=%OPENCV_ROOT_PATH% -DGTEST_ROOT=..\gtest-1.7.0 -DBOOST_ROOT=C:\Libraries\boost -DWITH_PCL=OFF -DWITH_MATIO=OFF ..\elm
build_script:
  - cmd: mingw32-make
test_script:
  - ps: cd .\bin
  - cmd: .\run_elm_unittests.exe
# to run your custom scripts instead of provider deployments
deploy_script:
  - cmd: ECHO "NOTHING TO DEPLOY"
on_success:
  - cmd: ECHO "NOTHING TO DO ON SUCCESS"
