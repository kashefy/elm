digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="elm::base_FeatureTransformationLayer",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="elm::base_SingleInputFeatureLayer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1base__SingleInputFeatureLayer.html",tooltip="base class for layer assuming single feature input, an intermediate layer implementation"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="elm::base_Layer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1base__Layer.html",tooltip="The Layer base class Overloaded constructor calls overloaded Reset() so you can implement Reset(confi..."];
  Node4 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="elm::base_MatOutputLayer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1base__MatOutputLayer.html",tooltip="class for time-invariant layer"];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="elm::base_SmoothLayer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1base__SmoothLayer.html",tooltip="intermediate Layer for applying smoothing algorithms I/O keys already defined by parent class..."];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="elm::MedianBlur",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1MedianBlur.html",tooltip="Wrap layer around median blur input and output keys defined by parent."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="elm::base_SupervisedBatch",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1base__SupervisedBatch.html",tooltip="class for defining interfaces of an abstract layer that can learn Overloaded constructor calls overlo..."];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="elm::MLP",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1MLP.html",tooltip="Layer class for mult-layer perceptrons."];
  Node1 -> Node9 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="elm::DiffOfGaussians",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1DiffOfGaussians.html",tooltip="Layer for difference of gaussians."];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="elm::ImageGradient",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1ImageGradient.html",tooltip="Layer for computing image gradients using forward difference."];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="elm::LayerY",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1LayerY.html",tooltip="The LayerY class."];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="elm::WeightedSum",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1WeightedSum.html",tooltip="class to implement base layer methods Yields weighted sum of stimulus with 2 elements Simple example ..."];
}
