digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="elm::LayerY",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="elm::base_FeatureTransformationLayer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1base__FeatureTransformationLayer.html",tooltip="An intermediate base class for prviding a layer interface involving a transformation of a single inpu..."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="elm::base_SingleInputFeatureLayer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1base__SingleInputFeatureLayer.html",tooltip="base class for layer assuming single feature input, an intermediate layer implementation"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="elm::base_Layer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1base__Layer.html",tooltip="The Layer base class Overloaded constructor calls overloaded Reset() so you can implement Reset(confi..."];
  Node5 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="elm::base_MatOutputLayer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1base__MatOutputLayer.html",tooltip="class for time-invariant layer"];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 -> Node1 [dir="back",color="darkgreen",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="elm::YNeuron",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1YNeuron.html",tooltip="layer for trivial spiking neuron."];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" poisson_" ,fontname="Helvetica"];
  Node7 [label="elm::PoissonProcess",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1PoissonProcess.html",tooltip="Class for simulating f-Hz Poisson process."];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="elm::Sampler1D",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1Sampler1D.html",tooltip="class for sampling from 1D PDF"];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="elm::base_Sampler",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classelm_1_1base__Sampler.html",tooltip="base class for sampling from a distribution"];
}
